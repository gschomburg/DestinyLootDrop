(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var SoundFX, after, drop, launch, loadDependencies, loadDrop, loadItemData, reset, snd;

launch = function() {
  var arms, chest, head, heavy, legs, primary, special;
  window.baseurl = "http://designergroupies.com/lootdrop/";
  loadDependencies();
  snd.test();
  snd.load(window.baseurl + "lootTest.mp4");
  heavy = [3191797830, 3191797831, 3705198528, 1274330687, 1274330686];
  primary = [119482464, 119482466, 2809229973, 119482465, 346443849, 3164616407, 3164616405, 3164616404, 135862170, 135862171, 3490486524, 3490486525, 1389842217, 2681212685];
  special = [346443851, 346443850, 1389842216, 3118679308, 3118679309];
  head = [144553854, 2994845057, 2771018501, 94883184, 2994845058, 2994845059, 144553855, 2771018502, 144553853, 3455371673, 2771018500, 3577254054];
  arms = [2927156752, 4146057409, 4132383826, 2591213943, 2335332317, 78421062];
  chest = [499191786, 2272644374, 1398023011, 499191787, 287395896, 2272644375, 1398023010];
  legs = [104781337, 921478195];
  window.categories = [heavy, primary, special, head, arms, chest, legs];
  return loadDrop();
};

reset = function() {};

loadDependencies = function() {
  var cssId, head, link;
  cssId = "dropCss";
  if (!document.getElementById(cssId)) {
    head = document.getElementsByTagName("head")[0];
    link = document.createElement("link");
    link.id = cssId;
    link.rel = "stylesheet";
    link.type = "text/css";
    link.href = window.baseurl + "css/loot.css";
    link.media = "all";
    return head.appendChild(link);
  }
};

loadDrop = function() {
  var category, container, i, items, ref, results;
  if (!document.getElementById("loot-container")) {
    container = document.createElement("div");
    container.id = "loot-container";
    document.body.appendChild(container);
  }
  items = [];
  window.imgPaths = [];
  window.dropCount = Math.ceil(Math.random() * 4);
  results = [];
  for (i = 0, ref = window.dropCount; 0 <= ref ? i < ref : i > ref; 0 <= ref ? i++ : i--) {
    category = window.categories[Math.floor(Math.random() * window.categories.length)];
    results.push(loadItemData(category[Math.floor(Math.random() * category.length)]));
  }
  return results;
};

drop = function() {
  var fn, i, imgPath, index, item, itemE, len, ref, results, t;
  console.log("drop");
  t = 300;
  ref = window.imgPaths;
  fn = function(itemE) {
    return after(t, (function(_this) {
      return function() {
        itemE.classList.add("reward");
        return snd.play();
      };
    })(this));
  };
  results = [];
  for (index = i = 0, len = ref.length; i < len; index = ++i) {
    item = ref[index];
    itemE = document.createElement("div");
    itemE.classList.add("loot");
    imgPath = window.imgPaths[index];
    itemE.innerHTML = "<div class=\"item\">\n	<img src=\"" + imgPath + "\" />\n</div>\n<div class=\"sparkles\">\n	<div class=\"sparkle\"></div>\n	<div class=\"sparkle\"></div>\n	<div class=\"sparkle\"></div>\n	<div class=\"sparkle\"></div>\n	<div class=\"sparkle\"></div>\n	<div class=\"sparkle\"></div>\n	<div class=\"sparkle\"></div>\n	<div class=\"sparkle\"></div>\n</div>";
    document.getElementById("loot-container").appendChild(itemE);
    fn(itemE);
    results.push(t += 120);
  }
  return results;
};

after = function(t, f) {
  return setTimeout(f, t);
};

loadItemData = function(hash) {
  var request;
  request = new XMLHttpRequest();
  return (function(request) {
    var query, url;
    url = "http://query.yahooapis.com/v1/public/yql";
    query = "?q=" + encodeURIComponent("select * from json where url=\"http://www.bungie.net/platform/Destiny/Manifest/InventoryItem/" + hash + "/?fmt=JSON\"") + "&format=json";
    request.open('GET', url + query, true);
    request.onload = function() {
      if (request.status >= 200 && request.status < 400) {
        window.imgPaths.push("http://www.bungie.net" + JSON.parse(request.responseText).query.results.json.Response.data.inventoryItem.icon);
        if (window.imgPaths.length >= window.dropCount) {
          return drop();
        }
      } else {

      }
    };
    request.onerror = function() {
      return console.log("request.onerror");
    };
    return request.send();
  })(request);
};

SoundFX = (function() {
  function SoundFX() {
    this.soundBuffer = null;
    this.loaded = false;
    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    this.context = new AudioContext();
    console.log(this.context);
  }

  SoundFX.prototype.load = function(url1) {
    var request;
    this.url = url1;
    request = new XMLHttpRequest();
    request.open('GET', this.url, true);
    request.responseType = 'arraybuffer';
    request.onload = (function(_this) {
      return function() {
        return _this.context.decodeAudioData(request.response, function(buffer) {
          _this.soundBuffer = buffer;
          _this.loaded = true;
          return console.log("loaded sound", _this);
        });
      };
    })(this);
    return request.send();
  };

  SoundFX.prototype.play = function() {
    var source;
    if (this.loaded === false) {
      return;
    }
    source = this.context.createBufferSource();
    source.buffer = this.soundBuffer;
    source.connect(this.context.destination);
    return source.start(0);
  };

  return SoundFX;

})();

console.log("main.js");

snd = new SoundFX();

launch();



},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
